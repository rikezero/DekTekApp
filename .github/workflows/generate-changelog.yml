name: Generate Changelog and Tag Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  # 1) Setup job: Extracts the app version from build.gradle or build.gradle.kts
  setup:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get-version.outputs.app_version }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Extract App Version
        id: get-version
        run: |
          if [ -f app/build.gradle ]; then
            APP_VERSION=$(grep -oP 'versionName\s*"\K[0-9.]+(?=")' app/build.gradle)
          elif [ -f app/build.gradle.kts ]; then
            APP_VERSION=$(grep -oP 'versionName\s*=\s*"\K[0-9.]+(?=")' app/build.gradle.kts)
          else
            echo "No build.gradle or build.gradle.kts file found!"
            exit 1
          fi

          if [ -z "$APP_VERSION" ]; then
            echo "Could not extract versionName. Ensure it is defined in build.gradle or build.gradle.kts."
            exit 1
          fi

          echo "App version: $APP_VERSION"
          echo "::set-output name=app_version::$APP_VERSION"

  # 2) Tagging job: Creates a Git tag for the extracted version if it doesn't exist
  tagging:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Check and Create Tag
        env:
          APP_VERSION: ${{ needs.setup.outputs.app_version }}
        run: |
          git remote set-url origin git@github.com:rikezero/DekTekApp.git
          
          # Fetch existing tags
          git fetch --tags
          
          # Check if the tag already exists
          if git rev-parse "v$APP_VERSION" >/dev/null 2>&1; then
            echo "Tag v$APP_VERSION already exists. Exiting."
            exit 0
          fi
          
          # Create and push the new tag
          echo "Creating and pushing tag v$APP_VERSION"
          git tag "v$APP_VERSION"
          git push origin "v$APP_VERSION"

  # 3) Changelog job: Uses github-changelog-generator to update CHANGELOG.md
  changelog:
    runs-on: ubuntu-latest
    needs: tagging
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Install Required Gems
        run: |
          gem install github_changelog_generator
          gem install faraday-retry

      - name: Generate CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: github_changelog_generator --user rikezero --project DekTekApp -t $GITHUB_TOKEN

      - name: Switch to SSH Remote
        run: git remote set-url origin git@github.com:rikezero/DekTekApp.git

      - name: Commit and Push Changelog
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "chore: Update CHANGELOG.md"
          git push