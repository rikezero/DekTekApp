# .github/workflows/generate_changelog.yml

name: Generate Changelog and Tag Release

on:
#  push:
#    branches:
#      - master
#    paths-ignore:
#      - 'CHANGELOG.md'  # Prevent workflow from triggering on changelog updates
  workflow_run:
    workflows: [ "Automatic Versioning" ]
    types:
      - completed

  workflow_dispatch:

permissions:
  contents: write  # Ensure the GITHUB_TOKEN has write permissions

jobs:
  setup:
  runs-on: ubuntu-latest
  outputs:
    app_version: ${{ steps.get-version.outputs.app_version }}
  steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensure full history for accurate tag checking

    - name: Set App Version
      id: get-version
      run: |
        if [ -z "$VERSION_NAME" ]; then
          echo "VERSION_NAME environment variable is not set. Please ensure it is defined in your workflow."
          exit 1
        fi

        echo "App version: $VERSION_NAME"
        echo "app_version=$VERSION_NAME" >> $GITHUB_OUTPUT

  # 2) Tagging job: Creates a Git tag for the extracted version if it doesn't exist
  tagging:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history for accurate tag checking

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Set Remote to SSH
        run: git remote set-url origin git@github.com:rikezero/DekTekApp.git

      - name: Check and Create Tag
        env:
          APP_VERSION: ${{ needs.setup.outputs.app_version }}
        run: |
          # Fetch existing tags
          git fetch --tags

          # Check if the tag already exists
          if git rev-parse "v$APP_VERSION" >/dev/null 2>&1; then
            echo "Tag v$APP_VERSION already exists. Exiting."
            exit 0
          fi

          # Create and push the new tag
          echo "Creating and pushing tag v$APP_VERSION"
          git tag "v$APP_VERSION"
          git push origin "v$APP_VERSION"

  # 3) Changelog job: Uses github-changelog-generator to update CHANGELOG.md
  changelog:
    runs-on: ubuntu-latest
    needs: tagging
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history for accurate changelog generation

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Set Remote to SSH
        run: git remote set-url origin git@github.com:rikezero/DekTekApp.git

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Install Required Gems
        run: |
          gem install github_changelog_generator
          gem install faraday-retry

      - name: Generate CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          github_changelog_generator --user rikezero --project DekTekApp --token $GITHUB_TOKEN

      - name: Invert PR Link and Description Order in CHANGELOG.md
        run: |
          sed -E 's/^- \[([#0-9]+)\]\(([^)]+)\) - (.+)/- \3 - [\1](\2)/' CHANGELOG.md > tmp.md && mv tmp.md CHANGELOG.md

      - name: Check for CHANGELOG.md Changes
        id: changelog_changes
        run: |
          # Fetch the latest master to compare
          git fetch origin master

          # Check if CHANGELOG.md has changes compared to origin/master
          if git diff --quiet origin/master -- CHANGELOG.md; then
            echo "No changes detected in CHANGELOG.md."
            echo "changed=0" >> $GITHUB_OUTPUT  # Updated syntax
          else
            echo "Changes detected in CHANGELOG.md."
            echo "changed=1" >> $GITHUB_OUTPUT  # Updated syntax
          fi

      - name: Commit and Push Changelog
        if: steps.changelog_changes.outputs.changed == '1'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "chore: Update CHANGELOG.md" || echo "No changes to commit"
          git push origin master
