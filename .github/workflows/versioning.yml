name: Automatic Versioning

on:
  push:
    branches:
      - master
      - dev
      - 'feature/**'
      - 'fix/**'
      - 'hotfix/**'

permissions:
  actions: write  # Grants write permissions to the actions scope, including variables

jobs:
  update-version:
    if: github.actor != 'github-actions[bot]'  # Prevents the workflow from running on its own commits
    name: Calculate and Update VERSION_NAME
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Repository with Full History
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessary for GitVersion to access full history

      # Step 2: Prevent Workflow Loop on Version Bump Commits
      - name: Prevent Loop on Version Bump Commits
        if: "startsWith(github.head_commit.message, 'chore: bump version to')"
        run: |
          echo "Detected version bump commit. Exiting workflow to prevent loop."
          exit 0

      # Step 3: Set Up SSH Authentication
      - name: Set Up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 4: Setup GitVersion
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
          versionSpec: '6.0.x'

      # Step 5: Determine version
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.1.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      # Step 6: Set Version Variables from GitVersion Outputs
      - name: Set Version Variables
        run: |
          echo "VERSION_NAME=${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_ENV
          echo "MAJOR=${{ steps.gitversion.outputs.major }}" >> $GITHUB_ENV
          echo "MINOR=${{ steps.gitversion.outputs.minor }}" >> $GITHUB_ENV
          echo "PATCH=${{ steps.gitversion.outputs.patch }}" >> $GITHUB_ENV
          echo "VERSION_CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH))" >> $GITHUB_ENV
        shell: bash

      # Step 6.1 Debug environment vars
      - name: Debug GitVersion Outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"

      # Step 7: Update VERSION_NAME Repository Variable via Set GitHub Variable Action
      - name: Update VERSION_NAME Variable
        uses: mmoyaferrer/set-github-variable@v1.0.0  # Use the latest stable version
        with:
          name: VERSION_NAME
          value: ${{ env.VERSION_NAME }}
          repository: rikezero/DekTekApp
          token: ${{ secrets.PAT_TOKEN }}